/* -------------------- ButtonComponent -------------------- */
.ButtonComponentStyle {
    display: inline-block;
    padding: 10px 20px;
    font-size: 16px;
    color: #fff;
    background-color: #007bff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    text-align: center;
}

/* -------------------- InputFieldComponent -------------------- */
.InputFieldComponentStyle {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

/* -------------------- TextAreaComponent -------------------- */
.TextAreaComponentStyle {
    width: 100%;
    min-height: 120px;
    padding: 12px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 6px;
    resize: vertical; /* Allows vertical resizing only */
    font-family: inherit;
    line-height: 1.5;
    box-sizing: border-box;
    background-color: #fff;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.TextAreaComponentStyle:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

/* -------------------- InputCheckBoxComponent -------------------- */
.labelCheckBoxComponentStyle {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 16px;
    padding: 8px 12px;
    border: 1px solid #ccc;
    border-radius: 6px;
    background-color: #fff;
    user-select: none;
    cursor: pointer;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.labelCheckBoxComponentStyle:hover {
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.15);
}

.labelCheckBoxComponentStyle:has(input:focus) {
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

.inputCheckBoxInputStyle {
    width: 18px;
    height: 18px;
    accent-color: #007bff;
    cursor: pointer;
    flex-shrink: 0;
}

/* -------------------- radioButtonComponent -------------------- */
.labelRadioButtonComponentStyle {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 16px;
  padding: 8px 12px;
  border: 1px solid #ccc;
  border-radius: 6px;
  background-color: #fff;
  user-select: none;
  cursor: pointer;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.labelRadioButtonComponentStyle:hover {
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.15);
}

.labelRadioButtonComponentStyle:has(input:focus) {
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

.InputRadioButtonComponentStyle {
  width: 18px;
  height: 18px;
  accent-color: #007bff;
  cursor: pointer;
  flex-shrink: 0;
}

/* -------------------- toggleSwitchComponent -------------------- */
.labelToggleSwitchComponentStyle {
  display: inline-flex;
  align-items: center;
  cursor: pointer; 
  user-select: none; 
  gap: 10px; 
  font-size: 16px;
  color: #333;
  position: relative; 
}

.inputToggleSwitchComponentStyle {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  pointer-events: none; 
}

.slider {
  position: relative;
  width: 40px;
  height: 20px;
  background-color: #ccc; 
  border-radius: 20px; 
  transition: background-color 0.2s ease; 
  flex-shrink: 0; 
}

.slider::before {
  content: "";
  position: absolute;
  width: 18px;
  height: 18px;
  left: 1px;
  top: 1px;
  background-color: white;
  border-radius: 50%; 
  transition: transform 0.2s ease; 
}

.inputToggleSwitchComponentStyle:checked + .slider {
  background-color: #007bff; 
}

.inputToggleSwitchComponentStyle:checked + .slider::before {
  transform: translateX(20px); 
}

/* -------------------- selectDropdownComponent -------------------- */
.labelSelectDropdownComponentStyle {
  display: flex;
  flex-direction: column;
  gap: 6px;
  font-size: 16px;
  color: #333;
  margin-bottom: 16px;
}

.spanSelectDropdownComponentStyle {
  font-weight: 500;
  padding-left: 4px;
}

.selectDropdownComponentStyle {
  width: 100%;
  padding: 10px 12px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 6px;
  background-color: #fff;
  color: #333;
  cursor: pointer;
  box-sizing: border-box;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  appearance: none;
  /* 
  Custom dropdown arrow icon added as an inline SVG background image.
  This replaces the native arrow which is hidden by 'appearance: none'.
  SVG is embedded as a data URI for better performance and scalability.
  (Generated with the help of AI tools)
  */
  background-image: url("data:image/svg+xml,%3Csvg width='14' height='10' viewBox='0 0 14 10' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1l6 6 6-6' stroke='%23333' stroke-width='2' fill='none' fill-rule='evenodd'/%3E%3C/svg%3E"); 
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 12px;
}

.selectDropdownComponentStyle:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

/* -------------------- badgeComponent -------------------- */
/* Note: This CSS has not been tested with a icon or image yet */
.divBadgeComponentStyle {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 4px 10px;
  font-size: 14px;
  font-weight: 600;
  border-radius: 12px;
  background-color: #f0f0f0;
  color: #333;
  user-select: none;
  cursor: default;
  white-space: nowrap;
  box-sizing: border-box;
  transition: background-color 0.2s ease;
  vertical-align: middle;
}

.divBadgeComponentStyle:hover {
  background-color: #e2e2e2;
}

.iconBadgeComponentStyle {
  display: inline-flex;
  width: 16px;
  height: 16px;
  flex-shrink: 0;
  justify-content: center;
  align-content: center;
}

.iconBadgeComponentStyle > img,
.iconBadgeComponentStyle > svg {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.spanBadgeComponentStyle {
  line-height: 1;
  user-select: none;
}

/* -------------------- avatarComponent -------------------- */
.divAvatarComponentStyle {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  overflow: hidden;
  background-color: #e0e0e0;
  color: #333;
  font-weight: 600;
  text-transform: uppercase;
  user-select: none;
  box-sizing: border-box;
}

.imgAvatarComponentStyle {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.spanAvatarComponentStyle {
  line-height: 1;
  font-size: 16px;
}

.avatarSmall {
  width: 32px;
  height: 32px;
  font-size: 12px;
}

.avatarMedium {
  width: 48px;
  height: 48px;
  font-size: 16px;
}

.avatarLarge {
  width: 64px;
  height: 64px;
  font-size: 20px;
}

/* -------------------- toolTipComponent -------------------- */
.divWrapperToolTipComponentStyle {
  display: inline-block;
  position: relative;
  cursor: pointer;
}

.divToolTipComponentStyle {
  position: absolute;
  z-index: 999;
}

.spanToolTipComponentStyle {
  background-color: #333;
  color: #fff;
  padding: 6px 10px;
  border-radius: 4px;
  font-size: 14px;
  white-space: nowrap;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  pointer-events: none;
}

.divWrapperToolTipComponentStyle:hover .spanToolTipComponentStyle {
  opacity: 1;
}

.topRightToolTipComponentStyle {
  position: fixed;
  top: 10px;
  right: 10px;
}

.bottomRightToolTipComponentStyle {
  position: fixed;
  bottom: 10px;
  right: 10px;
}

.topLeftToolTipComponentStyle {
  position: fixed;
  top: 10px;
  left: 10px;
}

.bottomLeftToolTipComponentStyle {
  position: fixed;
  bottom: 10px;
  left: 10px;
}

.relativeToolTipComponentStyle {
  top: -35px;
  left: 0;
}

/* -------------------- dividerComponent -------------------- */
.dividerComponentStyle {
  background-color: transparent; 
  display: flex;
  align-items: center;
  justify-content: center;
}

.horizontalDividerComponentStyle {
  width: 100%;
  height: 1px;
  background-color: #ccc;
  margin: 1rem 0;
}

.verticalDividerComponentStyle {
  width: 1px;
  align-self: stretch;
  background-color: #ccc;
  margin: 0 1rem;
}

/* -------------------- progressBarComponent -------------------- */
.progressBarComponentStyle {
  display: flex;
  flex-direction: column;
  gap: 8px;
  font-size: 14px;
  font-family: inherit;
  width: 100%;
  box-sizing: border-box;
}

.progressBarTopBottomWrapperComponentStyle {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.progressBarMainWrapperComponentStyle {
  display: flex;
  align-items: center;
  width: 100%;
  gap: 8px;
}

.progressBarSideWrapperComponentStyle {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 4px;
}

.progressBarTrackComponentStyle {
  flex-grow: 1;
  height: 20px;
  background-color: #e0e0e0;
  border-radius: 10px;
  overflow: hidden;
  position: relative;
}

.progressBarCenteredPercentage {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 0.85rem;
  font-weight: bold;
  color: #333;
  pointer-events: none;    
}

.progressBarFillComponentStyle {
  height: 100%;
  background-color: #007bff;
  transition: width 0.4s ease;
  border-radius: 10px 0 0 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  color: white;
  font-weight: 500;
}

.progressBarTextComponentStyle {
  font-weight: 500;
  color: #333;
  font-size: 14px;
  user-select: none;
}

.striped {
  background-image: linear-gradient(
    45deg,
    rgba(255, 255, 255, 0.15) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.15) 50%,
    rgba(255, 255, 255, 0.15) 75%,
    transparent 75%,
    transparent
  );
  background-size: 1rem 1rem;
}

.animated {
  animation: progressBarStripeMove 1s linear infinite;
}

@keyframes progressBarStripeMove {
  from {
    background-position: 1rem 0;
  }
  to {
    background-position: 0 0;
  }
}


/* -------------------- alertNotificationComponent -------------------- */
.alertNotificationWrapper {
    width: 300px;
    background: white;
    border-radius: 2px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    border-left: 4px solid #2196F3;
    overflow: hidden;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 10px;
}

/* Position Styles */
.alertNotificationTopRight {
    position: fixed;
    top: 20px;
    right: 20px;
}

.alertNotificationBottomRight {
    position: fixed;
    bottom: 20px;
    right: 20px;
}

.alertNotificationTopLeft {
    position: fixed;
    top: 20px;
    left: 20px;
}

.alertNotificationBottomLeft {
    position: fixed;
    bottom: 20px;
    left: 20px;
}

.alertNotificationCenter {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.alertNotificationTopCenter {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
}

.alertNotificationBottomCenter {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
}

/* Header Styles */
.alertNotificationHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 16px;
    background: #f8f8f8;
    border-bottom: 1px solid #e5e5e5;
}

.alertNotificationTitleContainer {
    display: flex;
    align-items: center;
    gap: 8px;
}

.alertNotificationTitle {
    margin: 0;
    font-size: 14px;
    font-weight: 600;
    color: #333;
}

.alertNotificationCloseButton {
    background: none;
    border: none;
    cursor: pointer;
    color: #666;
    font-size: 14px;
    padding: 4px;
}

.alertNotificationCloseButton:hover {
    color: #333;
}

/* Body Styles */
.alertNotificationBody {
    padding: 16px;
}

.alertNotificationMessage {
    margin: 0;
    font-size: 13px;
    color: #333;
    line-height: 1.4;
}

/* Footer Styles */
.alertNotificationFooter {
    display: flex;
    justify-content: flex-end;
    gap: 8px;
    padding: 12px 16px;
    background: #f8f8f8;
    border-top: 1px solid #e5e5e5;
}

.alertNotificationOkButton {
    padding: 6px 12px;
    border: 1px solid #ccc;
    border-radius: 2px;
    background: #f0f0f0;
    cursor: pointer;
    font-size: 12px;
}

.alertNotificationActionButton {
    padding: 6px 12px;
    border-radius: 2px;
    cursor: pointer;
    font-size: 12px;
    margin-right: auto;
}

.alertNotificationOkButton:hover {
    background: #e5e5e5;
}

/* Icon Styles */
.alertNotificationIconSuccess {
    color: #4CAF50;
    font-size: 16px;
}

.alertNotificationIconError {
    color: #F44336;
    font-size: 16px;
}

.alertNotificationIconWarning {
    color: #FF9800;
    font-size: 16px;
}

.alertNotificationIconInfo {
    color: #2196F3;
    font-size: 16px;
}

/* Type-specific Styles */
.alertNotificationWindow.alertNotificationTypeSuccess {
    border-left-color: #4CAF50;
}

.alertNotificationWindow.alertNotificationTypeError {
    border-left-color: #F44336;
}

.alertNotificationWindow.alertNotificationTypeWarning {
    border-left-color: #FF9800;
}

.alertNotificationWindow.alertNotificationTypeInfo {
    border-left-color: #2196F3;
}

.alertNotificationActionButtonSuccess {
    border: 1px solid #4CAF50;
    color: #4CAF50;
    background: rgba(76, 175, 80, 0.1);
}

.alertNotificationActionButtonError {
    border: 1px solid #F44336;
    color: #F44336;
    background: rgba(244, 67, 54, 0.1);
}

.alertNotificationActionButtonWarning {
    border: 1px solid #FF9800;
    color: #FF9800;
    background: rgba(255, 152, 0, 0.1);
}

.alertNotificationActionButtonInfo {
    border: 1px solid #2196F3;
    color: #2196F3;
    background: rgba(33, 150, 243, 0.1);
}

/* -------------------- CardComponent -------------------- */
.cardComponent {
    --card-bg: #ffffff;
    --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    --card-radius: 12px;
    --card-padding: 16px;
    --card-gap: 12px;
    --card-border: 1px solid #e5e7eb;

    background: var(--card-bg);
    border-radius: var(--card-radius);
    box-shadow: var(--card-shadow);
    border: var(--card-border);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    height: 100%;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.cardComponent:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
}

.cardComponentLink {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    height: 100%;
}

.cardComponentHeader {
    position: relative;
    padding-top: 56.25%; 
    overflow: hidden;
}

.cardComponentImage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.cardComponent:hover .cardComponentImage {
    transform: scale(1.03);
}

.cardComponentContent {
    padding: var(--card-padding);
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: var(--card-gap);
}

.cardComponentTitle {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
    color: #1f2937;
}

.cardComponentMessage {
    font-size: 0.875rem;
    color: #6b7280;
    margin: 0;
    line-height: 1.5;
}

.cardComponentFooter {
    padding: 0 var(--card-padding) var(--card-padding);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--card-gap);
}

.cardComponentTags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
}

.cardComponentTag {
    background: #f3f4f6;
    color: #4b5563;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 500;
}

.cardComponentActionButton {
    background: #3b82f6;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background 0.2s ease;
    align-self: flex-start;
}

.cardComponentActionButton:hover {
    background: #2563eb;
}

@media (max-width: 768px) {
    .cardComponent {
        --card-padding: 12px;
        --card-gap: 8px;
    }
    
    .cardComponentTitle {
        font-size: 1.1rem;
    }
}

/* -------------------- PopupComponent -------------------- */
.popupOverlayComponent {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(15, 15, 15, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 999;
  pointer-events: auto;
}

.popupContentWrapper {
  background: #fff;
  padding: 2rem;
  border-radius: 8px;
  width: 20%;
  height: 20%;
  max-width: 500px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  position: relative;
}

.popupTitleComponent {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.popupBodyComponent {
  margin-bottom: 1.5rem;
  font-size: 1rem;
  color: #333;
}

.popupCloseButtonComponent {
  background: #222;
  color: white;
  border: none;
  padding: 0.6rem 1.2rem;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
}
